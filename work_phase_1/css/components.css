.card-container {
    display: flex;
    flex-direction: column; /* Stack cards vertically on mobile */
    align-items: center; /* Center cards */
    gap: 1rem; /* Add space between cards */
    padding: 1rem;
}                    
/* components.css */

.simple-card {
    background-color: white;         /* 设置卡片背景为白色，以便与页面背景区分 */
    border: 1px solid #ddd;          /* 添加 1px 宽、实线、浅灰色 (#ddd) 的边框 */
    border-radius: 8px;              /* 将卡片的角变圆 (8px 圆角半径) */
    box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.1); /* 添加细微阴影效果 (水平偏移2px, 垂直偏移2px, 模糊10px, 10%透明度的黑色) */
    padding: 1.5rem;                 /* 在卡片内部添加 1.5rem 的内边距，让内容和边框有间距 */
    width: 100%;                     /* 让卡片尝试填充其父容器 (.card-container) 的可用宽度 */
    max-width: 350px;                /* 限制卡片的最大宽度不超过 350px */
    text-align: center;              /* 让卡片内部的文字内容 (h1, p 等) 水平居中显示 */
}
/* components.css - 添加到文件末尾 */
/* components.css */
/* 确保这段代码在 @media(...) 之前 */

/* Temperature Widget Styles */
.temperature-widget {
    position: absolute; /* 或可能意图是 fixed, 见下方说明 */
    top: 10px;          /* 距离顶部 10px */
    right: 10px;         /* 距离右侧 10px */
    background: var(--color-dark); /* 使用深色变量作为背景 */
    padding: 10px 15px;      /* 内边距：上下 10px, 左右 15px */
    border-radius: 5px;      /* 圆角 */
    box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.1); /* 阴影 */
    font-size: 1rem;         /* 字体大小 */
    font-weight: bold;       /* 字体加粗 */
    color: white;            /* 文字颜色为白色 */
}
@media (min-width: 768px) { /* 当屏幕宽度 >= 768px 时应用以下样式 */

    .card-container {
        flex-direction: row;       /* 改为水平排列 (行) */
        flex-wrap: wrap;           /* 允许卡片换行 */
        justify-content: center;   /* 水平居中所有行中的卡片 */
    }

    .simple-card {
        width: auto;               /* 重置宽度，让 flex 属性控制 */
        flex: 1 1 280px;           /* 设置卡片的弹性尺寸 */
                                   /* flex-grow: 1  (允许放大) */
                                   /* flex-shrink: 1 (允许缩小) */
                                   /* flex-basis: 280px (理想基础宽度) */
    }
}
/* components.css */
/* 可以加在 .simple-card 规则之后 */

/* button styles */
.button {
    padding: 10px 20px;     /* 内边距 */
    border-radius: 5px;     /* 圆角 */
    font-size: 1rem;        /* 字体大小 */
    border: none;           /* 无边框 */
    cursor: pointer;        /* 鼠标手型 */
    text-align: center;     /* 文本居中 (代码示例包含，列表中未明确提及) */
    display: inline-block;  /* 设为行内块元素 (代码示例包含，列表中未明确提及) */
}
/* components.css */
/* 可以加在 .button 规则之后 */

/* button color variants */
.button-primary {
    background-color: var(--color-primary); /* 使用主颜色变量 */
    color: white;                           /* 设置文字颜色为白色 (确保对比度) */
}

.button-secondary {
    background-color: var(--color-secondary); /* 使用次要颜色变量 */
    color: white;                             /* 设置文字颜色为白色 */
}

.button-dark {
    background-color: var(--color-dark);      /* 使用深色变量 */
    color: white;                             /* 设置文字颜色为白色 */
}

.button-bright {
    background-color: var(--color-bright);    /* 使用亮色变量 */
    color: black;                             /* 设置文字颜色为黑色 (因为背景是亮色) */
}
.button {
    padding: 10px 20px;
    border-radius: 5px;
    font-size: 1rem;
    border: none;
    cursor: pointer;
    text-align: center;
    display: inline-block;
    /* 添加下面这行 */
    transition: all 0.2s ease-in-out; /* 应用于基础状态 */
    text-decoration: none;
}

/* 然后是你刚才添加的 .button:hover 规则 */
.button:hover {
    box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.2);
    transform: translateY(-2px);
    /* 如果 transition 加到了基础 .button 规则，这里就不需要重复写了 */
    /* transition: all 0.2s ease-in-out; */ /* 可以注释掉或删除 */
}